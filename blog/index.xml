<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Ibrahim Jarif</title>
    <link>https://jarifibrahim.github.io/blog/</link>
    <description>Recent content in Blog on Ibrahim Jarif</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 29 May 2020 18:05:06 +0530</lastBuildDate>
    
	<atom:link href="https://jarifibrahim.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Setup SSH using Tailscale or ngrok</title>
      <link>https://jarifibrahim.github.io/blog/ssh-using-tailscale-or-ngrok/</link>
      <pubDate>Fri, 29 May 2020 18:05:06 +0530</pubDate>
      
      <guid>https://jarifibrahim.github.io/blog/ssh-using-tailscale-or-ngrok/</guid>
      <description>.caption { font-size: 0.9em; margin: 0px 50px; text-align: center; margin-bottom: 20px; }  SSH is a secure protocol used as the primary means of connecting to Linux servers remotely. The remote server can be your computer. For instance, I use SSH to access my office computer.
Setting up SSH is easy, and there are multiple articles on how to set up SSH. This blog post is about how to SSH into a machine that does not have a static public IP; that is, the machine is inside a private network, for example, my laptop at home or my computer inside a WeWork building.</description>
    </item>
    
    <item>
      <title>Using GORM Hooks to Clean up Test Fixtures in Golang</title>
      <link>https://jarifibrahim.github.io/blog/test-cleanup-with-gorm-hooks/</link>
      <pubDate>Sun, 27 Jan 2019 18:05:06 +0530</pubDate>
      
      <guid>https://jarifibrahim.github.io/blog/test-cleanup-with-gorm-hooks/</guid>
      <description>If you’ve ever written code in Golang that interfaces with the database, chances are that you already know GORM. With GORM, creating, updating, deleting records is super simple.
 But GORM offers a lot more than just basic database operations. One of my favourites is the ability to attach database Hooks. Database hooks can be used to do all kinds of cool stuff like automatically deleting records created by test fixtures, logging information about when a record was inserted/deleted, updating records in one table when another is changed and so on.</description>
    </item>
    
    <item>
      <title>The Curious Case of Protractor and Page Synchronization</title>
      <link>https://jarifibrahim.github.io/blog/protractor-and-page-synchronization/</link>
      <pubDate>Tue, 07 Aug 2018 18:05:06 +0530</pubDate>
      
      <guid>https://jarifibrahim.github.io/blog/protractor-and-page-synchronization/</guid>
      <description>.caption { font-size: 0.9em; margin: 0px 50px; text-align: center; margin-bottom: 20px; }  Protractor is an amazing tool but use it incorrectly and it will make your life miserable. This blog post is about how a simple setTimeout() made my life miserable.  “A book with a magnifying glass on top of it, next to a pen, and globes on a desk in Cianorte” by João Silas on Unsplash  I recently started working on the fabric8-planner project which is part of the fabric8-ui project.</description>
    </item>
    
    <item>
      <title>Golden Files — Why you should use them</title>
      <link>https://jarifibrahim.github.io/blog/golden-files-why-you-should-use-them/</link>
      <pubDate>Mon, 19 Mar 2018 12:03:06 +0530</pubDate>
      
      <guid>https://jarifibrahim.github.io/blog/golden-files-why-you-should-use-them/</guid>
      <description>.caption { font-size: 0.9em; margin: 0px 50px; text-align: center; margin-bottom: 20px; }   A Golden file from the fabric8 project — https://github.com/fabric8-services/fabric8-wit/blob/master/controller/test-files/label/update/ok.label.golden.json  Testing responses from an API is often straightforward and monotonous. You set a few headers, make a request and assert the received response. The problem starts when your API sends a huge amount of data in the response. You validate each attribute of the response against the expected value.</description>
    </item>
    
  </channel>
</rss>